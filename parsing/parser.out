Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement
Rule 2     statements -> statements statement
Rule 3     statement -> assignment
Rule 4     statement -> print_statement
Rule 5     statement -> if_statement
Rule 6     statement -> while_statement
Rule 7     statement -> for_statement
Rule 8     statement -> NEWLINE
Rule 9     while_statement -> WHILE expression COLON statements
Rule 10    for_statement -> FOR VARIABLE IN expression COLON statements
Rule 11    print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN
Rule 12    assignment -> VARIABLE EQUAL expression
Rule 13    assignment -> VARIABLE EQUAL STRING
Rule 14    assignment -> VARIABLE EQUAL NUMBER
Rule 15    assignment -> VARIABLE EQUAL VARIABLE
Rule 16    expression -> term
Rule 17    expression -> expression PLUS term
Rule 18    expression -> expression MINUS term
Rule 19    expression -> expression STAR term
Rule 20    expression -> expression SLASH term
Rule 21    expression -> expression GREATER term
Rule 22    expression -> expression LESS term
Rule 23    expression -> expression EQUAL_EQUAL term
Rule 24    expression -> expression NOT_EQUAL term
Rule 25    expression -> expression GREATER_EQUAL term
Rule 26    expression -> expression LESS_EQUAL term
Rule 27    term -> NUMBER
Rule 28    term -> STRING
Rule 29    term -> VARIABLE
Rule 30    term -> FLOAT
Rule 31    term -> list
Rule 32    list -> LEFT_BRACKET elements RIGHT_BRACKET
Rule 33    elements -> expression
Rule 34    elements -> elements COMMA expression
Rule 35    if_statement -> IF expression COLON statements else_statement
Rule 36    else_statement -> <empty>
Rule 37    else_statement -> ELSE COLON statements
Rule 38    variable_assignment -> VARIABLE EQUAL expression

Terminals, with rules where they appear

COLON                : 9 10 35 37
COMMA                : 34
COMMENT              : 
ELSE                 : 37
EQUAL                : 12 13 14 15 38
EQUAL_EQUAL          : 23
FLOAT                : 30
FOR                  : 10
GREATER              : 21
GREATER_EQUAL        : 25
IF                   : 35
IN                   : 10
LEFT_BRACKET         : 32
LEFT_PAREN           : 11
LESS                 : 22
LESS_EQUAL           : 26
MINUS                : 18
NEWLINE              : 8
NOT_EQUAL            : 24
NUMBER               : 14 27
PLUS                 : 17
PRINT                : 11
RIGHT_BRACKET        : 32
RIGHT_PAREN          : 11
SLASH                : 20
STAR                 : 19
STRING               : 13 28
VARIABLE             : 10 12 13 14 15 15 29 38
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

assignment           : 3
elements             : 32 34
else_statement       : 35
expression           : 9 10 11 12 17 18 19 20 21 22 23 24 25 26 33 34 35 38
for_statement        : 7
if_statement         : 5
list                 : 31
print_statement      : 4
statement            : 1 2
statements           : 2 9 10 35 37 0
term                 : 16 17 18 19 20 21 22 23 24 25 26
variable_assignment  : 
while_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7

state 1

    (0) S' -> statements .
    (2) statements -> statements . statement
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

    statement                      shift and go to state 14
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7

state 2

    (1) statements -> statement .

    NEWLINE         reduce using rule 1 (statements -> statement .)
    VARIABLE        reduce using rule 1 (statements -> statement .)
    PRINT           reduce using rule 1 (statements -> statement .)
    IF              reduce using rule 1 (statements -> statement .)
    WHILE           reduce using rule 1 (statements -> statement .)
    FOR             reduce using rule 1 (statements -> statement .)
    $end            reduce using rule 1 (statements -> statement .)
    ELSE            reduce using rule 1 (statements -> statement .)


state 3

    (3) statement -> assignment .

    NEWLINE         reduce using rule 3 (statement -> assignment .)
    VARIABLE        reduce using rule 3 (statement -> assignment .)
    PRINT           reduce using rule 3 (statement -> assignment .)
    IF              reduce using rule 3 (statement -> assignment .)
    WHILE           reduce using rule 3 (statement -> assignment .)
    FOR             reduce using rule 3 (statement -> assignment .)
    $end            reduce using rule 3 (statement -> assignment .)
    ELSE            reduce using rule 3 (statement -> assignment .)


state 4

    (4) statement -> print_statement .

    NEWLINE         reduce using rule 4 (statement -> print_statement .)
    VARIABLE        reduce using rule 4 (statement -> print_statement .)
    PRINT           reduce using rule 4 (statement -> print_statement .)
    IF              reduce using rule 4 (statement -> print_statement .)
    WHILE           reduce using rule 4 (statement -> print_statement .)
    FOR             reduce using rule 4 (statement -> print_statement .)
    $end            reduce using rule 4 (statement -> print_statement .)
    ELSE            reduce using rule 4 (statement -> print_statement .)


state 5

    (5) statement -> if_statement .

    NEWLINE         reduce using rule 5 (statement -> if_statement .)
    VARIABLE        reduce using rule 5 (statement -> if_statement .)
    PRINT           reduce using rule 5 (statement -> if_statement .)
    IF              reduce using rule 5 (statement -> if_statement .)
    WHILE           reduce using rule 5 (statement -> if_statement .)
    FOR             reduce using rule 5 (statement -> if_statement .)
    $end            reduce using rule 5 (statement -> if_statement .)
    ELSE            reduce using rule 5 (statement -> if_statement .)


state 6

    (6) statement -> while_statement .

    NEWLINE         reduce using rule 6 (statement -> while_statement .)
    VARIABLE        reduce using rule 6 (statement -> while_statement .)
    PRINT           reduce using rule 6 (statement -> while_statement .)
    IF              reduce using rule 6 (statement -> while_statement .)
    WHILE           reduce using rule 6 (statement -> while_statement .)
    FOR             reduce using rule 6 (statement -> while_statement .)
    $end            reduce using rule 6 (statement -> while_statement .)
    ELSE            reduce using rule 6 (statement -> while_statement .)


state 7

    (7) statement -> for_statement .

    NEWLINE         reduce using rule 7 (statement -> for_statement .)
    VARIABLE        reduce using rule 7 (statement -> for_statement .)
    PRINT           reduce using rule 7 (statement -> for_statement .)
    IF              reduce using rule 7 (statement -> for_statement .)
    WHILE           reduce using rule 7 (statement -> for_statement .)
    FOR             reduce using rule 7 (statement -> for_statement .)
    $end            reduce using rule 7 (statement -> for_statement .)
    ELSE            reduce using rule 7 (statement -> for_statement .)


state 8

    (8) statement -> NEWLINE .

    NEWLINE         reduce using rule 8 (statement -> NEWLINE .)
    VARIABLE        reduce using rule 8 (statement -> NEWLINE .)
    PRINT           reduce using rule 8 (statement -> NEWLINE .)
    IF              reduce using rule 8 (statement -> NEWLINE .)
    WHILE           reduce using rule 8 (statement -> NEWLINE .)
    FOR             reduce using rule 8 (statement -> NEWLINE .)
    $end            reduce using rule 8 (statement -> NEWLINE .)
    ELSE            reduce using rule 8 (statement -> NEWLINE .)


state 9

    (12) assignment -> VARIABLE . EQUAL expression
    (13) assignment -> VARIABLE . EQUAL STRING
    (14) assignment -> VARIABLE . EQUAL NUMBER
    (15) assignment -> VARIABLE . EQUAL VARIABLE

    EQUAL           shift and go to state 15


state 10

    (11) print_statement -> PRINT . LEFT_PAREN expression RIGHT_PAREN

    LEFT_PAREN      shift and go to state 16


state 11

    (35) if_statement -> IF . expression COLON statements else_statement
    (16) expression -> . term
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression STAR term
    (20) expression -> . expression SLASH term
    (21) expression -> . expression GREATER term
    (22) expression -> . expression LESS term
    (23) expression -> . expression EQUAL_EQUAL term
    (24) expression -> . expression NOT_EQUAL term
    (25) expression -> . expression GREATER_EQUAL term
    (26) expression -> . expression LESS_EQUAL term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    expression                     shift and go to state 17
    term                           shift and go to state 18
    list                           shift and go to state 23

state 12

    (9) while_statement -> WHILE . expression COLON statements
    (16) expression -> . term
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression STAR term
    (20) expression -> . expression SLASH term
    (21) expression -> . expression GREATER term
    (22) expression -> . expression LESS term
    (23) expression -> . expression EQUAL_EQUAL term
    (24) expression -> . expression NOT_EQUAL term
    (25) expression -> . expression GREATER_EQUAL term
    (26) expression -> . expression LESS_EQUAL term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    expression                     shift and go to state 25
    term                           shift and go to state 18
    list                           shift and go to state 23

state 13

    (10) for_statement -> FOR . VARIABLE IN expression COLON statements

    VARIABLE        shift and go to state 26


state 14

    (2) statements -> statements statement .

    NEWLINE         reduce using rule 2 (statements -> statements statement .)
    VARIABLE        reduce using rule 2 (statements -> statements statement .)
    PRINT           reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    WHILE           reduce using rule 2 (statements -> statements statement .)
    FOR             reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    ELSE            reduce using rule 2 (statements -> statements statement .)


state 15

    (12) assignment -> VARIABLE EQUAL . expression
    (13) assignment -> VARIABLE EQUAL . STRING
    (14) assignment -> VARIABLE EQUAL . NUMBER
    (15) assignment -> VARIABLE EQUAL . VARIABLE
    (16) expression -> . term
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression STAR term
    (20) expression -> . expression SLASH term
    (21) expression -> . expression GREATER term
    (22) expression -> . expression LESS term
    (23) expression -> . expression EQUAL_EQUAL term
    (24) expression -> . expression NOT_EQUAL term
    (25) expression -> . expression GREATER_EQUAL term
    (26) expression -> . expression LESS_EQUAL term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    STRING          shift and go to state 29
    NUMBER          shift and go to state 30
    VARIABLE        shift and go to state 27
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    expression                     shift and go to state 28
    term                           shift and go to state 18
    list                           shift and go to state 23

state 16

    (11) print_statement -> PRINT LEFT_PAREN . expression RIGHT_PAREN
    (16) expression -> . term
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression STAR term
    (20) expression -> . expression SLASH term
    (21) expression -> . expression GREATER term
    (22) expression -> . expression LESS term
    (23) expression -> . expression EQUAL_EQUAL term
    (24) expression -> . expression NOT_EQUAL term
    (25) expression -> . expression GREATER_EQUAL term
    (26) expression -> . expression LESS_EQUAL term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    expression                     shift and go to state 31
    term                           shift and go to state 18
    list                           shift and go to state 23

state 17

    (35) if_statement -> IF expression . COLON statements else_statement
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . STAR term
    (20) expression -> expression . SLASH term
    (21) expression -> expression . GREATER term
    (22) expression -> expression . LESS term
    (23) expression -> expression . EQUAL_EQUAL term
    (24) expression -> expression . NOT_EQUAL term
    (25) expression -> expression . GREATER_EQUAL term
    (26) expression -> expression . LESS_EQUAL term

    COLON           shift and go to state 32
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    STAR            shift and go to state 35
    SLASH           shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    EQUAL_EQUAL     shift and go to state 39
    NOT_EQUAL       shift and go to state 40
    GREATER_EQUAL   shift and go to state 41
    LESS_EQUAL      shift and go to state 42


state 18

    (16) expression -> term .

    COLON           reduce using rule 16 (expression -> term .)
    PLUS            reduce using rule 16 (expression -> term .)
    MINUS           reduce using rule 16 (expression -> term .)
    STAR            reduce using rule 16 (expression -> term .)
    SLASH           reduce using rule 16 (expression -> term .)
    GREATER         reduce using rule 16 (expression -> term .)
    LESS            reduce using rule 16 (expression -> term .)
    EQUAL_EQUAL     reduce using rule 16 (expression -> term .)
    NOT_EQUAL       reduce using rule 16 (expression -> term .)
    GREATER_EQUAL   reduce using rule 16 (expression -> term .)
    LESS_EQUAL      reduce using rule 16 (expression -> term .)
    NEWLINE         reduce using rule 16 (expression -> term .)
    VARIABLE        reduce using rule 16 (expression -> term .)
    PRINT           reduce using rule 16 (expression -> term .)
    IF              reduce using rule 16 (expression -> term .)
    WHILE           reduce using rule 16 (expression -> term .)
    FOR             reduce using rule 16 (expression -> term .)
    $end            reduce using rule 16 (expression -> term .)
    ELSE            reduce using rule 16 (expression -> term .)
    RIGHT_PAREN     reduce using rule 16 (expression -> term .)
    RIGHT_BRACKET   reduce using rule 16 (expression -> term .)
    COMMA           reduce using rule 16 (expression -> term .)


state 19

    (27) term -> NUMBER .

    COLON           reduce using rule 27 (term -> NUMBER .)
    PLUS            reduce using rule 27 (term -> NUMBER .)
    MINUS           reduce using rule 27 (term -> NUMBER .)
    STAR            reduce using rule 27 (term -> NUMBER .)
    SLASH           reduce using rule 27 (term -> NUMBER .)
    GREATER         reduce using rule 27 (term -> NUMBER .)
    LESS            reduce using rule 27 (term -> NUMBER .)
    EQUAL_EQUAL     reduce using rule 27 (term -> NUMBER .)
    NOT_EQUAL       reduce using rule 27 (term -> NUMBER .)
    GREATER_EQUAL   reduce using rule 27 (term -> NUMBER .)
    LESS_EQUAL      reduce using rule 27 (term -> NUMBER .)
    RIGHT_PAREN     reduce using rule 27 (term -> NUMBER .)
    RIGHT_BRACKET   reduce using rule 27 (term -> NUMBER .)
    COMMA           reduce using rule 27 (term -> NUMBER .)
    NEWLINE         reduce using rule 27 (term -> NUMBER .)
    VARIABLE        reduce using rule 27 (term -> NUMBER .)
    PRINT           reduce using rule 27 (term -> NUMBER .)
    IF              reduce using rule 27 (term -> NUMBER .)
    WHILE           reduce using rule 27 (term -> NUMBER .)
    FOR             reduce using rule 27 (term -> NUMBER .)
    $end            reduce using rule 27 (term -> NUMBER .)
    ELSE            reduce using rule 27 (term -> NUMBER .)


state 20

    (28) term -> STRING .

    COLON           reduce using rule 28 (term -> STRING .)
    PLUS            reduce using rule 28 (term -> STRING .)
    MINUS           reduce using rule 28 (term -> STRING .)
    STAR            reduce using rule 28 (term -> STRING .)
    SLASH           reduce using rule 28 (term -> STRING .)
    GREATER         reduce using rule 28 (term -> STRING .)
    LESS            reduce using rule 28 (term -> STRING .)
    EQUAL_EQUAL     reduce using rule 28 (term -> STRING .)
    NOT_EQUAL       reduce using rule 28 (term -> STRING .)
    GREATER_EQUAL   reduce using rule 28 (term -> STRING .)
    LESS_EQUAL      reduce using rule 28 (term -> STRING .)
    RIGHT_PAREN     reduce using rule 28 (term -> STRING .)
    RIGHT_BRACKET   reduce using rule 28 (term -> STRING .)
    COMMA           reduce using rule 28 (term -> STRING .)
    NEWLINE         reduce using rule 28 (term -> STRING .)
    VARIABLE        reduce using rule 28 (term -> STRING .)
    PRINT           reduce using rule 28 (term -> STRING .)
    IF              reduce using rule 28 (term -> STRING .)
    WHILE           reduce using rule 28 (term -> STRING .)
    FOR             reduce using rule 28 (term -> STRING .)
    $end            reduce using rule 28 (term -> STRING .)
    ELSE            reduce using rule 28 (term -> STRING .)


state 21

    (29) term -> VARIABLE .

    COLON           reduce using rule 29 (term -> VARIABLE .)
    PLUS            reduce using rule 29 (term -> VARIABLE .)
    MINUS           reduce using rule 29 (term -> VARIABLE .)
    STAR            reduce using rule 29 (term -> VARIABLE .)
    SLASH           reduce using rule 29 (term -> VARIABLE .)
    GREATER         reduce using rule 29 (term -> VARIABLE .)
    LESS            reduce using rule 29 (term -> VARIABLE .)
    EQUAL_EQUAL     reduce using rule 29 (term -> VARIABLE .)
    NOT_EQUAL       reduce using rule 29 (term -> VARIABLE .)
    GREATER_EQUAL   reduce using rule 29 (term -> VARIABLE .)
    LESS_EQUAL      reduce using rule 29 (term -> VARIABLE .)
    RIGHT_PAREN     reduce using rule 29 (term -> VARIABLE .)
    RIGHT_BRACKET   reduce using rule 29 (term -> VARIABLE .)
    COMMA           reduce using rule 29 (term -> VARIABLE .)
    NEWLINE         reduce using rule 29 (term -> VARIABLE .)
    VARIABLE        reduce using rule 29 (term -> VARIABLE .)
    PRINT           reduce using rule 29 (term -> VARIABLE .)
    IF              reduce using rule 29 (term -> VARIABLE .)
    WHILE           reduce using rule 29 (term -> VARIABLE .)
    FOR             reduce using rule 29 (term -> VARIABLE .)
    $end            reduce using rule 29 (term -> VARIABLE .)
    ELSE            reduce using rule 29 (term -> VARIABLE .)


state 22

    (30) term -> FLOAT .

    COLON           reduce using rule 30 (term -> FLOAT .)
    PLUS            reduce using rule 30 (term -> FLOAT .)
    MINUS           reduce using rule 30 (term -> FLOAT .)
    STAR            reduce using rule 30 (term -> FLOAT .)
    SLASH           reduce using rule 30 (term -> FLOAT .)
    GREATER         reduce using rule 30 (term -> FLOAT .)
    LESS            reduce using rule 30 (term -> FLOAT .)
    EQUAL_EQUAL     reduce using rule 30 (term -> FLOAT .)
    NOT_EQUAL       reduce using rule 30 (term -> FLOAT .)
    GREATER_EQUAL   reduce using rule 30 (term -> FLOAT .)
    LESS_EQUAL      reduce using rule 30 (term -> FLOAT .)
    NEWLINE         reduce using rule 30 (term -> FLOAT .)
    VARIABLE        reduce using rule 30 (term -> FLOAT .)
    PRINT           reduce using rule 30 (term -> FLOAT .)
    IF              reduce using rule 30 (term -> FLOAT .)
    WHILE           reduce using rule 30 (term -> FLOAT .)
    FOR             reduce using rule 30 (term -> FLOAT .)
    $end            reduce using rule 30 (term -> FLOAT .)
    ELSE            reduce using rule 30 (term -> FLOAT .)
    RIGHT_PAREN     reduce using rule 30 (term -> FLOAT .)
    RIGHT_BRACKET   reduce using rule 30 (term -> FLOAT .)
    COMMA           reduce using rule 30 (term -> FLOAT .)


state 23

    (31) term -> list .

    COLON           reduce using rule 31 (term -> list .)
    PLUS            reduce using rule 31 (term -> list .)
    MINUS           reduce using rule 31 (term -> list .)
    STAR            reduce using rule 31 (term -> list .)
    SLASH           reduce using rule 31 (term -> list .)
    GREATER         reduce using rule 31 (term -> list .)
    LESS            reduce using rule 31 (term -> list .)
    EQUAL_EQUAL     reduce using rule 31 (term -> list .)
    NOT_EQUAL       reduce using rule 31 (term -> list .)
    GREATER_EQUAL   reduce using rule 31 (term -> list .)
    LESS_EQUAL      reduce using rule 31 (term -> list .)
    NEWLINE         reduce using rule 31 (term -> list .)
    VARIABLE        reduce using rule 31 (term -> list .)
    PRINT           reduce using rule 31 (term -> list .)
    IF              reduce using rule 31 (term -> list .)
    WHILE           reduce using rule 31 (term -> list .)
    FOR             reduce using rule 31 (term -> list .)
    $end            reduce using rule 31 (term -> list .)
    ELSE            reduce using rule 31 (term -> list .)
    RIGHT_PAREN     reduce using rule 31 (term -> list .)
    RIGHT_BRACKET   reduce using rule 31 (term -> list .)
    COMMA           reduce using rule 31 (term -> list .)


state 24

    (32) list -> LEFT_BRACKET . elements RIGHT_BRACKET
    (33) elements -> . expression
    (34) elements -> . elements COMMA expression
    (16) expression -> . term
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression STAR term
    (20) expression -> . expression SLASH term
    (21) expression -> . expression GREATER term
    (22) expression -> . expression LESS term
    (23) expression -> . expression EQUAL_EQUAL term
    (24) expression -> . expression NOT_EQUAL term
    (25) expression -> . expression GREATER_EQUAL term
    (26) expression -> . expression LESS_EQUAL term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    elements                       shift and go to state 43
    expression                     shift and go to state 44
    term                           shift and go to state 18
    list                           shift and go to state 23

state 25

    (9) while_statement -> WHILE expression . COLON statements
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . STAR term
    (20) expression -> expression . SLASH term
    (21) expression -> expression . GREATER term
    (22) expression -> expression . LESS term
    (23) expression -> expression . EQUAL_EQUAL term
    (24) expression -> expression . NOT_EQUAL term
    (25) expression -> expression . GREATER_EQUAL term
    (26) expression -> expression . LESS_EQUAL term

    COLON           shift and go to state 45
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    STAR            shift and go to state 35
    SLASH           shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    EQUAL_EQUAL     shift and go to state 39
    NOT_EQUAL       shift and go to state 40
    GREATER_EQUAL   shift and go to state 41
    LESS_EQUAL      shift and go to state 42


state 26

    (10) for_statement -> FOR VARIABLE . IN expression COLON statements

    IN              shift and go to state 46


state 27

    (15) assignment -> VARIABLE EQUAL VARIABLE .
    (29) term -> VARIABLE .

  ! reduce/reduce conflict for NEWLINE resolved using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for FOR resolved using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
    NEWLINE         reduce using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
    VARIABLE        reduce using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
    PRINT           reduce using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
    IF              reduce using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
    WHILE           reduce using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
    FOR             reduce using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
    $end            reduce using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
    ELSE            reduce using rule 15 (assignment -> VARIABLE EQUAL VARIABLE .)
    PLUS            reduce using rule 29 (term -> VARIABLE .)
    MINUS           reduce using rule 29 (term -> VARIABLE .)
    STAR            reduce using rule 29 (term -> VARIABLE .)
    SLASH           reduce using rule 29 (term -> VARIABLE .)
    GREATER         reduce using rule 29 (term -> VARIABLE .)
    LESS            reduce using rule 29 (term -> VARIABLE .)
    EQUAL_EQUAL     reduce using rule 29 (term -> VARIABLE .)
    NOT_EQUAL       reduce using rule 29 (term -> VARIABLE .)
    GREATER_EQUAL   reduce using rule 29 (term -> VARIABLE .)
    LESS_EQUAL      reduce using rule 29 (term -> VARIABLE .)

  ! NEWLINE         [ reduce using rule 29 (term -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 29 (term -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 29 (term -> VARIABLE .) ]
  ! IF              [ reduce using rule 29 (term -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 29 (term -> VARIABLE .) ]
  ! FOR             [ reduce using rule 29 (term -> VARIABLE .) ]
  ! $end            [ reduce using rule 29 (term -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 29 (term -> VARIABLE .) ]


state 28

    (12) assignment -> VARIABLE EQUAL expression .
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . STAR term
    (20) expression -> expression . SLASH term
    (21) expression -> expression . GREATER term
    (22) expression -> expression . LESS term
    (23) expression -> expression . EQUAL_EQUAL term
    (24) expression -> expression . NOT_EQUAL term
    (25) expression -> expression . GREATER_EQUAL term
    (26) expression -> expression . LESS_EQUAL term

    NEWLINE         reduce using rule 12 (assignment -> VARIABLE EQUAL expression .)
    VARIABLE        reduce using rule 12 (assignment -> VARIABLE EQUAL expression .)
    PRINT           reduce using rule 12 (assignment -> VARIABLE EQUAL expression .)
    IF              reduce using rule 12 (assignment -> VARIABLE EQUAL expression .)
    WHILE           reduce using rule 12 (assignment -> VARIABLE EQUAL expression .)
    FOR             reduce using rule 12 (assignment -> VARIABLE EQUAL expression .)
    $end            reduce using rule 12 (assignment -> VARIABLE EQUAL expression .)
    ELSE            reduce using rule 12 (assignment -> VARIABLE EQUAL expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    STAR            shift and go to state 35
    SLASH           shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    EQUAL_EQUAL     shift and go to state 39
    NOT_EQUAL       shift and go to state 40
    GREATER_EQUAL   shift and go to state 41
    LESS_EQUAL      shift and go to state 42


state 29

    (13) assignment -> VARIABLE EQUAL STRING .
    (28) term -> STRING .

  ! reduce/reduce conflict for NEWLINE resolved using rule 13 (assignment -> VARIABLE EQUAL STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 13 (assignment -> VARIABLE EQUAL STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (assignment -> VARIABLE EQUAL STRING .)
  ! reduce/reduce conflict for IF resolved using rule 13 (assignment -> VARIABLE EQUAL STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (assignment -> VARIABLE EQUAL STRING .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (assignment -> VARIABLE EQUAL STRING .)
  ! reduce/reduce conflict for $end resolved using rule 13 (assignment -> VARIABLE EQUAL STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (assignment -> VARIABLE EQUAL STRING .)
    NEWLINE         reduce using rule 13 (assignment -> VARIABLE EQUAL STRING .)
    VARIABLE        reduce using rule 13 (assignment -> VARIABLE EQUAL STRING .)
    PRINT           reduce using rule 13 (assignment -> VARIABLE EQUAL STRING .)
    IF              reduce using rule 13 (assignment -> VARIABLE EQUAL STRING .)
    WHILE           reduce using rule 13 (assignment -> VARIABLE EQUAL STRING .)
    FOR             reduce using rule 13 (assignment -> VARIABLE EQUAL STRING .)
    $end            reduce using rule 13 (assignment -> VARIABLE EQUAL STRING .)
    ELSE            reduce using rule 13 (assignment -> VARIABLE EQUAL STRING .)
    PLUS            reduce using rule 28 (term -> STRING .)
    MINUS           reduce using rule 28 (term -> STRING .)
    STAR            reduce using rule 28 (term -> STRING .)
    SLASH           reduce using rule 28 (term -> STRING .)
    GREATER         reduce using rule 28 (term -> STRING .)
    LESS            reduce using rule 28 (term -> STRING .)
    EQUAL_EQUAL     reduce using rule 28 (term -> STRING .)
    NOT_EQUAL       reduce using rule 28 (term -> STRING .)
    GREATER_EQUAL   reduce using rule 28 (term -> STRING .)
    LESS_EQUAL      reduce using rule 28 (term -> STRING .)

  ! NEWLINE         [ reduce using rule 28 (term -> STRING .) ]
  ! VARIABLE        [ reduce using rule 28 (term -> STRING .) ]
  ! PRINT           [ reduce using rule 28 (term -> STRING .) ]
  ! IF              [ reduce using rule 28 (term -> STRING .) ]
  ! WHILE           [ reduce using rule 28 (term -> STRING .) ]
  ! FOR             [ reduce using rule 28 (term -> STRING .) ]
  ! $end            [ reduce using rule 28 (term -> STRING .) ]
  ! ELSE            [ reduce using rule 28 (term -> STRING .) ]


state 30

    (14) assignment -> VARIABLE EQUAL NUMBER .
    (27) term -> NUMBER .

  ! reduce/reduce conflict for NEWLINE resolved using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for PRINT resolved using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for WHILE resolved using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for $end resolved using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
    NEWLINE         reduce using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
    VARIABLE        reduce using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
    PRINT           reduce using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
    IF              reduce using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
    WHILE           reduce using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
    FOR             reduce using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
    $end            reduce using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
    ELSE            reduce using rule 14 (assignment -> VARIABLE EQUAL NUMBER .)
    PLUS            reduce using rule 27 (term -> NUMBER .)
    MINUS           reduce using rule 27 (term -> NUMBER .)
    STAR            reduce using rule 27 (term -> NUMBER .)
    SLASH           reduce using rule 27 (term -> NUMBER .)
    GREATER         reduce using rule 27 (term -> NUMBER .)
    LESS            reduce using rule 27 (term -> NUMBER .)
    EQUAL_EQUAL     reduce using rule 27 (term -> NUMBER .)
    NOT_EQUAL       reduce using rule 27 (term -> NUMBER .)
    GREATER_EQUAL   reduce using rule 27 (term -> NUMBER .)
    LESS_EQUAL      reduce using rule 27 (term -> NUMBER .)

  ! NEWLINE         [ reduce using rule 27 (term -> NUMBER .) ]
  ! VARIABLE        [ reduce using rule 27 (term -> NUMBER .) ]
  ! PRINT           [ reduce using rule 27 (term -> NUMBER .) ]
  ! IF              [ reduce using rule 27 (term -> NUMBER .) ]
  ! WHILE           [ reduce using rule 27 (term -> NUMBER .) ]
  ! FOR             [ reduce using rule 27 (term -> NUMBER .) ]
  ! $end            [ reduce using rule 27 (term -> NUMBER .) ]
  ! ELSE            [ reduce using rule 27 (term -> NUMBER .) ]


state 31

    (11) print_statement -> PRINT LEFT_PAREN expression . RIGHT_PAREN
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . STAR term
    (20) expression -> expression . SLASH term
    (21) expression -> expression . GREATER term
    (22) expression -> expression . LESS term
    (23) expression -> expression . EQUAL_EQUAL term
    (24) expression -> expression . NOT_EQUAL term
    (25) expression -> expression . GREATER_EQUAL term
    (26) expression -> expression . LESS_EQUAL term

    RIGHT_PAREN     shift and go to state 47
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    STAR            shift and go to state 35
    SLASH           shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    EQUAL_EQUAL     shift and go to state 39
    NOT_EQUAL       shift and go to state 40
    GREATER_EQUAL   shift and go to state 41
    LESS_EQUAL      shift and go to state 42


state 32

    (35) if_statement -> IF expression COLON . statements else_statement
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

    statements                     shift and go to state 48
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7

state 33

    (17) expression -> expression PLUS . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 49
    list                           shift and go to state 23

state 34

    (18) expression -> expression MINUS . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 50
    list                           shift and go to state 23

state 35

    (19) expression -> expression STAR . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 51
    list                           shift and go to state 23

state 36

    (20) expression -> expression SLASH . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 52
    list                           shift and go to state 23

state 37

    (21) expression -> expression GREATER . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 53
    list                           shift and go to state 23

state 38

    (22) expression -> expression LESS . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 54
    list                           shift and go to state 23

state 39

    (23) expression -> expression EQUAL_EQUAL . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 55
    list                           shift and go to state 23

state 40

    (24) expression -> expression NOT_EQUAL . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 56
    list                           shift and go to state 23

state 41

    (25) expression -> expression GREATER_EQUAL . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 57
    list                           shift and go to state 23

state 42

    (26) expression -> expression LESS_EQUAL . term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    term                           shift and go to state 58
    list                           shift and go to state 23

state 43

    (32) list -> LEFT_BRACKET elements . RIGHT_BRACKET
    (34) elements -> elements . COMMA expression

    RIGHT_BRACKET   shift and go to state 59
    COMMA           shift and go to state 60


state 44

    (33) elements -> expression .
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . STAR term
    (20) expression -> expression . SLASH term
    (21) expression -> expression . GREATER term
    (22) expression -> expression . LESS term
    (23) expression -> expression . EQUAL_EQUAL term
    (24) expression -> expression . NOT_EQUAL term
    (25) expression -> expression . GREATER_EQUAL term
    (26) expression -> expression . LESS_EQUAL term

    RIGHT_BRACKET   reduce using rule 33 (elements -> expression .)
    COMMA           reduce using rule 33 (elements -> expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    STAR            shift and go to state 35
    SLASH           shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    EQUAL_EQUAL     shift and go to state 39
    NOT_EQUAL       shift and go to state 40
    GREATER_EQUAL   shift and go to state 41
    LESS_EQUAL      shift and go to state 42


state 45

    (9) while_statement -> WHILE expression COLON . statements
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

    statements                     shift and go to state 61
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7

state 46

    (10) for_statement -> FOR VARIABLE IN . expression COLON statements
    (16) expression -> . term
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression STAR term
    (20) expression -> . expression SLASH term
    (21) expression -> . expression GREATER term
    (22) expression -> . expression LESS term
    (23) expression -> . expression EQUAL_EQUAL term
    (24) expression -> . expression NOT_EQUAL term
    (25) expression -> . expression GREATER_EQUAL term
    (26) expression -> . expression LESS_EQUAL term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    expression                     shift and go to state 62
    term                           shift and go to state 18
    list                           shift and go to state 23

state 47

    (11) print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN .

    NEWLINE         reduce using rule 11 (print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN .)
    VARIABLE        reduce using rule 11 (print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN .)
    PRINT           reduce using rule 11 (print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN .)
    IF              reduce using rule 11 (print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN .)
    WHILE           reduce using rule 11 (print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN .)
    FOR             reduce using rule 11 (print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 11 (print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN .)
    ELSE            reduce using rule 11 (print_statement -> PRINT LEFT_PAREN expression RIGHT_PAREN .)


state 48

    (35) if_statement -> IF expression COLON statements . else_statement
    (2) statements -> statements . statement
    (36) else_statement -> .
    (37) else_statement -> . ELSE COLON statements
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 36 (else_statement -> .)
    ELSE            shift and go to state 64
    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

  ! ELSE            [ reduce using rule 36 (else_statement -> .) ]
  ! NEWLINE         [ reduce using rule 36 (else_statement -> .) ]
  ! VARIABLE        [ reduce using rule 36 (else_statement -> .) ]
  ! PRINT           [ reduce using rule 36 (else_statement -> .) ]
  ! IF              [ reduce using rule 36 (else_statement -> .) ]
  ! WHILE           [ reduce using rule 36 (else_statement -> .) ]
  ! FOR             [ reduce using rule 36 (else_statement -> .) ]

    else_statement                 shift and go to state 63
    statement                      shift and go to state 14
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7

state 49

    (17) expression -> expression PLUS term .

    COLON           reduce using rule 17 (expression -> expression PLUS term .)
    PLUS            reduce using rule 17 (expression -> expression PLUS term .)
    MINUS           reduce using rule 17 (expression -> expression PLUS term .)
    STAR            reduce using rule 17 (expression -> expression PLUS term .)
    SLASH           reduce using rule 17 (expression -> expression PLUS term .)
    GREATER         reduce using rule 17 (expression -> expression PLUS term .)
    LESS            reduce using rule 17 (expression -> expression PLUS term .)
    EQUAL_EQUAL     reduce using rule 17 (expression -> expression PLUS term .)
    NOT_EQUAL       reduce using rule 17 (expression -> expression PLUS term .)
    GREATER_EQUAL   reduce using rule 17 (expression -> expression PLUS term .)
    LESS_EQUAL      reduce using rule 17 (expression -> expression PLUS term .)
    NEWLINE         reduce using rule 17 (expression -> expression PLUS term .)
    VARIABLE        reduce using rule 17 (expression -> expression PLUS term .)
    PRINT           reduce using rule 17 (expression -> expression PLUS term .)
    IF              reduce using rule 17 (expression -> expression PLUS term .)
    WHILE           reduce using rule 17 (expression -> expression PLUS term .)
    FOR             reduce using rule 17 (expression -> expression PLUS term .)
    $end            reduce using rule 17 (expression -> expression PLUS term .)
    ELSE            reduce using rule 17 (expression -> expression PLUS term .)
    RIGHT_PAREN     reduce using rule 17 (expression -> expression PLUS term .)
    RIGHT_BRACKET   reduce using rule 17 (expression -> expression PLUS term .)
    COMMA           reduce using rule 17 (expression -> expression PLUS term .)


state 50

    (18) expression -> expression MINUS term .

    COLON           reduce using rule 18 (expression -> expression MINUS term .)
    PLUS            reduce using rule 18 (expression -> expression MINUS term .)
    MINUS           reduce using rule 18 (expression -> expression MINUS term .)
    STAR            reduce using rule 18 (expression -> expression MINUS term .)
    SLASH           reduce using rule 18 (expression -> expression MINUS term .)
    GREATER         reduce using rule 18 (expression -> expression MINUS term .)
    LESS            reduce using rule 18 (expression -> expression MINUS term .)
    EQUAL_EQUAL     reduce using rule 18 (expression -> expression MINUS term .)
    NOT_EQUAL       reduce using rule 18 (expression -> expression MINUS term .)
    GREATER_EQUAL   reduce using rule 18 (expression -> expression MINUS term .)
    LESS_EQUAL      reduce using rule 18 (expression -> expression MINUS term .)
    NEWLINE         reduce using rule 18 (expression -> expression MINUS term .)
    VARIABLE        reduce using rule 18 (expression -> expression MINUS term .)
    PRINT           reduce using rule 18 (expression -> expression MINUS term .)
    IF              reduce using rule 18 (expression -> expression MINUS term .)
    WHILE           reduce using rule 18 (expression -> expression MINUS term .)
    FOR             reduce using rule 18 (expression -> expression MINUS term .)
    $end            reduce using rule 18 (expression -> expression MINUS term .)
    ELSE            reduce using rule 18 (expression -> expression MINUS term .)
    RIGHT_PAREN     reduce using rule 18 (expression -> expression MINUS term .)
    RIGHT_BRACKET   reduce using rule 18 (expression -> expression MINUS term .)
    COMMA           reduce using rule 18 (expression -> expression MINUS term .)


state 51

    (19) expression -> expression STAR term .

    COLON           reduce using rule 19 (expression -> expression STAR term .)
    PLUS            reduce using rule 19 (expression -> expression STAR term .)
    MINUS           reduce using rule 19 (expression -> expression STAR term .)
    STAR            reduce using rule 19 (expression -> expression STAR term .)
    SLASH           reduce using rule 19 (expression -> expression STAR term .)
    GREATER         reduce using rule 19 (expression -> expression STAR term .)
    LESS            reduce using rule 19 (expression -> expression STAR term .)
    EQUAL_EQUAL     reduce using rule 19 (expression -> expression STAR term .)
    NOT_EQUAL       reduce using rule 19 (expression -> expression STAR term .)
    GREATER_EQUAL   reduce using rule 19 (expression -> expression STAR term .)
    LESS_EQUAL      reduce using rule 19 (expression -> expression STAR term .)
    NEWLINE         reduce using rule 19 (expression -> expression STAR term .)
    VARIABLE        reduce using rule 19 (expression -> expression STAR term .)
    PRINT           reduce using rule 19 (expression -> expression STAR term .)
    IF              reduce using rule 19 (expression -> expression STAR term .)
    WHILE           reduce using rule 19 (expression -> expression STAR term .)
    FOR             reduce using rule 19 (expression -> expression STAR term .)
    $end            reduce using rule 19 (expression -> expression STAR term .)
    ELSE            reduce using rule 19 (expression -> expression STAR term .)
    RIGHT_PAREN     reduce using rule 19 (expression -> expression STAR term .)
    RIGHT_BRACKET   reduce using rule 19 (expression -> expression STAR term .)
    COMMA           reduce using rule 19 (expression -> expression STAR term .)


state 52

    (20) expression -> expression SLASH term .

    COLON           reduce using rule 20 (expression -> expression SLASH term .)
    PLUS            reduce using rule 20 (expression -> expression SLASH term .)
    MINUS           reduce using rule 20 (expression -> expression SLASH term .)
    STAR            reduce using rule 20 (expression -> expression SLASH term .)
    SLASH           reduce using rule 20 (expression -> expression SLASH term .)
    GREATER         reduce using rule 20 (expression -> expression SLASH term .)
    LESS            reduce using rule 20 (expression -> expression SLASH term .)
    EQUAL_EQUAL     reduce using rule 20 (expression -> expression SLASH term .)
    NOT_EQUAL       reduce using rule 20 (expression -> expression SLASH term .)
    GREATER_EQUAL   reduce using rule 20 (expression -> expression SLASH term .)
    LESS_EQUAL      reduce using rule 20 (expression -> expression SLASH term .)
    NEWLINE         reduce using rule 20 (expression -> expression SLASH term .)
    VARIABLE        reduce using rule 20 (expression -> expression SLASH term .)
    PRINT           reduce using rule 20 (expression -> expression SLASH term .)
    IF              reduce using rule 20 (expression -> expression SLASH term .)
    WHILE           reduce using rule 20 (expression -> expression SLASH term .)
    FOR             reduce using rule 20 (expression -> expression SLASH term .)
    $end            reduce using rule 20 (expression -> expression SLASH term .)
    ELSE            reduce using rule 20 (expression -> expression SLASH term .)
    RIGHT_PAREN     reduce using rule 20 (expression -> expression SLASH term .)
    RIGHT_BRACKET   reduce using rule 20 (expression -> expression SLASH term .)
    COMMA           reduce using rule 20 (expression -> expression SLASH term .)


state 53

    (21) expression -> expression GREATER term .

    COLON           reduce using rule 21 (expression -> expression GREATER term .)
    PLUS            reduce using rule 21 (expression -> expression GREATER term .)
    MINUS           reduce using rule 21 (expression -> expression GREATER term .)
    STAR            reduce using rule 21 (expression -> expression GREATER term .)
    SLASH           reduce using rule 21 (expression -> expression GREATER term .)
    GREATER         reduce using rule 21 (expression -> expression GREATER term .)
    LESS            reduce using rule 21 (expression -> expression GREATER term .)
    EQUAL_EQUAL     reduce using rule 21 (expression -> expression GREATER term .)
    NOT_EQUAL       reduce using rule 21 (expression -> expression GREATER term .)
    GREATER_EQUAL   reduce using rule 21 (expression -> expression GREATER term .)
    LESS_EQUAL      reduce using rule 21 (expression -> expression GREATER term .)
    NEWLINE         reduce using rule 21 (expression -> expression GREATER term .)
    VARIABLE        reduce using rule 21 (expression -> expression GREATER term .)
    PRINT           reduce using rule 21 (expression -> expression GREATER term .)
    IF              reduce using rule 21 (expression -> expression GREATER term .)
    WHILE           reduce using rule 21 (expression -> expression GREATER term .)
    FOR             reduce using rule 21 (expression -> expression GREATER term .)
    $end            reduce using rule 21 (expression -> expression GREATER term .)
    ELSE            reduce using rule 21 (expression -> expression GREATER term .)
    RIGHT_PAREN     reduce using rule 21 (expression -> expression GREATER term .)
    RIGHT_BRACKET   reduce using rule 21 (expression -> expression GREATER term .)
    COMMA           reduce using rule 21 (expression -> expression GREATER term .)


state 54

    (22) expression -> expression LESS term .

    COLON           reduce using rule 22 (expression -> expression LESS term .)
    PLUS            reduce using rule 22 (expression -> expression LESS term .)
    MINUS           reduce using rule 22 (expression -> expression LESS term .)
    STAR            reduce using rule 22 (expression -> expression LESS term .)
    SLASH           reduce using rule 22 (expression -> expression LESS term .)
    GREATER         reduce using rule 22 (expression -> expression LESS term .)
    LESS            reduce using rule 22 (expression -> expression LESS term .)
    EQUAL_EQUAL     reduce using rule 22 (expression -> expression LESS term .)
    NOT_EQUAL       reduce using rule 22 (expression -> expression LESS term .)
    GREATER_EQUAL   reduce using rule 22 (expression -> expression LESS term .)
    LESS_EQUAL      reduce using rule 22 (expression -> expression LESS term .)
    NEWLINE         reduce using rule 22 (expression -> expression LESS term .)
    VARIABLE        reduce using rule 22 (expression -> expression LESS term .)
    PRINT           reduce using rule 22 (expression -> expression LESS term .)
    IF              reduce using rule 22 (expression -> expression LESS term .)
    WHILE           reduce using rule 22 (expression -> expression LESS term .)
    FOR             reduce using rule 22 (expression -> expression LESS term .)
    $end            reduce using rule 22 (expression -> expression LESS term .)
    ELSE            reduce using rule 22 (expression -> expression LESS term .)
    RIGHT_PAREN     reduce using rule 22 (expression -> expression LESS term .)
    RIGHT_BRACKET   reduce using rule 22 (expression -> expression LESS term .)
    COMMA           reduce using rule 22 (expression -> expression LESS term .)


state 55

    (23) expression -> expression EQUAL_EQUAL term .

    COLON           reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    PLUS            reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    MINUS           reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    STAR            reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    SLASH           reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    GREATER         reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    LESS            reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    EQUAL_EQUAL     reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    NOT_EQUAL       reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    GREATER_EQUAL   reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    LESS_EQUAL      reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    NEWLINE         reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    VARIABLE        reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    PRINT           reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    IF              reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    WHILE           reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    FOR             reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    $end            reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    ELSE            reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    RIGHT_PAREN     reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    RIGHT_BRACKET   reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)
    COMMA           reduce using rule 23 (expression -> expression EQUAL_EQUAL term .)


state 56

    (24) expression -> expression NOT_EQUAL term .

    COLON           reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    PLUS            reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    MINUS           reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    STAR            reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    SLASH           reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    GREATER         reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    LESS            reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    EQUAL_EQUAL     reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    NOT_EQUAL       reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    GREATER_EQUAL   reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    LESS_EQUAL      reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    NEWLINE         reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    VARIABLE        reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    PRINT           reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    IF              reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    WHILE           reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    FOR             reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    $end            reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    ELSE            reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    RIGHT_PAREN     reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    RIGHT_BRACKET   reduce using rule 24 (expression -> expression NOT_EQUAL term .)
    COMMA           reduce using rule 24 (expression -> expression NOT_EQUAL term .)


state 57

    (25) expression -> expression GREATER_EQUAL term .

    COLON           reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    PLUS            reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    MINUS           reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    STAR            reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    SLASH           reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    GREATER         reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    LESS            reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    EQUAL_EQUAL     reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    NOT_EQUAL       reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    GREATER_EQUAL   reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    LESS_EQUAL      reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    NEWLINE         reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    VARIABLE        reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    PRINT           reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    IF              reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    WHILE           reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    FOR             reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    $end            reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    ELSE            reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    RIGHT_PAREN     reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    RIGHT_BRACKET   reduce using rule 25 (expression -> expression GREATER_EQUAL term .)
    COMMA           reduce using rule 25 (expression -> expression GREATER_EQUAL term .)


state 58

    (26) expression -> expression LESS_EQUAL term .

    COLON           reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    PLUS            reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    MINUS           reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    STAR            reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    SLASH           reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    GREATER         reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    LESS            reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    EQUAL_EQUAL     reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    NOT_EQUAL       reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    GREATER_EQUAL   reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    LESS_EQUAL      reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    NEWLINE         reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    VARIABLE        reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    PRINT           reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    IF              reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    WHILE           reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    FOR             reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    $end            reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    ELSE            reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    RIGHT_PAREN     reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    RIGHT_BRACKET   reduce using rule 26 (expression -> expression LESS_EQUAL term .)
    COMMA           reduce using rule 26 (expression -> expression LESS_EQUAL term .)


state 59

    (32) list -> LEFT_BRACKET elements RIGHT_BRACKET .

    COLON           reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    PLUS            reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    MINUS           reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    STAR            reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    SLASH           reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    GREATER         reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    LESS            reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    EQUAL_EQUAL     reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    GREATER_EQUAL   reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    LESS_EQUAL      reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    NEWLINE         reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    VARIABLE        reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    PRINT           reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    IF              reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    WHILE           reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    FOR             reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    $end            reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    ELSE            reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    RIGHT_PAREN     reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)
    COMMA           reduce using rule 32 (list -> LEFT_BRACKET elements RIGHT_BRACKET .)


state 60

    (34) elements -> elements COMMA . expression
    (16) expression -> . term
    (17) expression -> . expression PLUS term
    (18) expression -> . expression MINUS term
    (19) expression -> . expression STAR term
    (20) expression -> . expression SLASH term
    (21) expression -> . expression GREATER term
    (22) expression -> . expression LESS term
    (23) expression -> . expression EQUAL_EQUAL term
    (24) expression -> . expression NOT_EQUAL term
    (25) expression -> . expression GREATER_EQUAL term
    (26) expression -> . expression LESS_EQUAL term
    (27) term -> . NUMBER
    (28) term -> . STRING
    (29) term -> . VARIABLE
    (30) term -> . FLOAT
    (31) term -> . list
    (32) list -> . LEFT_BRACKET elements RIGHT_BRACKET

    NUMBER          shift and go to state 19
    STRING          shift and go to state 20
    VARIABLE        shift and go to state 21
    FLOAT           shift and go to state 22
    LEFT_BRACKET    shift and go to state 24

    expression                     shift and go to state 65
    term                           shift and go to state 18
    list                           shift and go to state 23

state 61

    (9) while_statement -> WHILE expression COLON statements .
    (2) statements -> statements . statement
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 9 (while_statement -> WHILE expression COLON statements .)
    ELSE            reduce using rule 9 (while_statement -> WHILE expression COLON statements .)
    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

  ! NEWLINE         [ reduce using rule 9 (while_statement -> WHILE expression COLON statements .) ]
  ! VARIABLE        [ reduce using rule 9 (while_statement -> WHILE expression COLON statements .) ]
  ! PRINT           [ reduce using rule 9 (while_statement -> WHILE expression COLON statements .) ]
  ! IF              [ reduce using rule 9 (while_statement -> WHILE expression COLON statements .) ]
  ! WHILE           [ reduce using rule 9 (while_statement -> WHILE expression COLON statements .) ]
  ! FOR             [ reduce using rule 9 (while_statement -> WHILE expression COLON statements .) ]

    statement                      shift and go to state 14
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7

state 62

    (10) for_statement -> FOR VARIABLE IN expression . COLON statements
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . STAR term
    (20) expression -> expression . SLASH term
    (21) expression -> expression . GREATER term
    (22) expression -> expression . LESS term
    (23) expression -> expression . EQUAL_EQUAL term
    (24) expression -> expression . NOT_EQUAL term
    (25) expression -> expression . GREATER_EQUAL term
    (26) expression -> expression . LESS_EQUAL term

    COLON           shift and go to state 66
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    STAR            shift and go to state 35
    SLASH           shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    EQUAL_EQUAL     shift and go to state 39
    NOT_EQUAL       shift and go to state 40
    GREATER_EQUAL   shift and go to state 41
    LESS_EQUAL      shift and go to state 42


state 63

    (35) if_statement -> IF expression COLON statements else_statement .

    NEWLINE         reduce using rule 35 (if_statement -> IF expression COLON statements else_statement .)
    VARIABLE        reduce using rule 35 (if_statement -> IF expression COLON statements else_statement .)
    PRINT           reduce using rule 35 (if_statement -> IF expression COLON statements else_statement .)
    IF              reduce using rule 35 (if_statement -> IF expression COLON statements else_statement .)
    WHILE           reduce using rule 35 (if_statement -> IF expression COLON statements else_statement .)
    FOR             reduce using rule 35 (if_statement -> IF expression COLON statements else_statement .)
    $end            reduce using rule 35 (if_statement -> IF expression COLON statements else_statement .)
    ELSE            reduce using rule 35 (if_statement -> IF expression COLON statements else_statement .)


state 64

    (37) else_statement -> ELSE . COLON statements

    COLON           shift and go to state 67


state 65

    (34) elements -> elements COMMA expression .
    (17) expression -> expression . PLUS term
    (18) expression -> expression . MINUS term
    (19) expression -> expression . STAR term
    (20) expression -> expression . SLASH term
    (21) expression -> expression . GREATER term
    (22) expression -> expression . LESS term
    (23) expression -> expression . EQUAL_EQUAL term
    (24) expression -> expression . NOT_EQUAL term
    (25) expression -> expression . GREATER_EQUAL term
    (26) expression -> expression . LESS_EQUAL term

    RIGHT_BRACKET   reduce using rule 34 (elements -> elements COMMA expression .)
    COMMA           reduce using rule 34 (elements -> elements COMMA expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    STAR            shift and go to state 35
    SLASH           shift and go to state 36
    GREATER         shift and go to state 37
    LESS            shift and go to state 38
    EQUAL_EQUAL     shift and go to state 39
    NOT_EQUAL       shift and go to state 40
    GREATER_EQUAL   shift and go to state 41
    LESS_EQUAL      shift and go to state 42


state 66

    (10) for_statement -> FOR VARIABLE IN expression COLON . statements
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

    statements                     shift and go to state 68
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7

state 67

    (37) else_statement -> ELSE COLON . statements
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

    statements                     shift and go to state 69
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7

state 68

    (10) for_statement -> FOR VARIABLE IN expression COLON statements .
    (2) statements -> statements . statement
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 10 (for_statement -> FOR VARIABLE IN expression COLON statements .)
    ELSE            reduce using rule 10 (for_statement -> FOR VARIABLE IN expression COLON statements .)
    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

  ! NEWLINE         [ reduce using rule 10 (for_statement -> FOR VARIABLE IN expression COLON statements .) ]
  ! VARIABLE        [ reduce using rule 10 (for_statement -> FOR VARIABLE IN expression COLON statements .) ]
  ! PRINT           [ reduce using rule 10 (for_statement -> FOR VARIABLE IN expression COLON statements .) ]
  ! IF              [ reduce using rule 10 (for_statement -> FOR VARIABLE IN expression COLON statements .) ]
  ! WHILE           [ reduce using rule 10 (for_statement -> FOR VARIABLE IN expression COLON statements .) ]
  ! FOR             [ reduce using rule 10 (for_statement -> FOR VARIABLE IN expression COLON statements .) ]

    statement                      shift and go to state 14
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7

state 69

    (37) else_statement -> ELSE COLON statements .
    (2) statements -> statements . statement
    (3) statement -> . assignment
    (4) statement -> . print_statement
    (5) statement -> . if_statement
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . NEWLINE
    (12) assignment -> . VARIABLE EQUAL expression
    (13) assignment -> . VARIABLE EQUAL STRING
    (14) assignment -> . VARIABLE EQUAL NUMBER
    (15) assignment -> . VARIABLE EQUAL VARIABLE
    (11) print_statement -> . PRINT LEFT_PAREN expression RIGHT_PAREN
    (35) if_statement -> . IF expression COLON statements else_statement
    (9) while_statement -> . WHILE expression COLON statements
    (10) for_statement -> . FOR VARIABLE IN expression COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    ELSE            reduce using rule 37 (else_statement -> ELSE COLON statements .)
    $end            reduce using rule 37 (else_statement -> ELSE COLON statements .)
    NEWLINE         shift and go to state 8
    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13

  ! NEWLINE         [ reduce using rule 37 (else_statement -> ELSE COLON statements .) ]
  ! VARIABLE        [ reduce using rule 37 (else_statement -> ELSE COLON statements .) ]
  ! PRINT           [ reduce using rule 37 (else_statement -> ELSE COLON statements .) ]
  ! IF              [ reduce using rule 37 (else_statement -> ELSE COLON statements .) ]
  ! WHILE           [ reduce using rule 37 (else_statement -> ELSE COLON statements .) ]
  ! FOR             [ reduce using rule 37 (else_statement -> ELSE COLON statements .) ]

    statement                      shift and go to state 14
    assignment                     shift and go to state 3
    print_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6
    for_statement                  shift and go to state 7
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 48 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 48 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 48 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 48 resolved as shift
WARNING: shift/reduce conflict for IF in state 48 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 48 resolved as shift
WARNING: shift/reduce conflict for FOR in state 48 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for FOR in state 61 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 68 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 68 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 68 resolved as shift
WARNING: shift/reduce conflict for FOR in state 68 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 69 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 69 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 69 resolved as shift
WARNING: shift/reduce conflict for FOR in state 69 resolved as shift
WARNING: reduce/reduce conflict in state 27 resolved using rule (assignment -> VARIABLE EQUAL VARIABLE)
WARNING: rejected rule (term -> VARIABLE) in state 27
WARNING: reduce/reduce conflict in state 29 resolved using rule (assignment -> VARIABLE EQUAL STRING)
WARNING: rejected rule (term -> STRING) in state 29
WARNING: reduce/reduce conflict in state 30 resolved using rule (assignment -> VARIABLE EQUAL NUMBER)
WARNING: rejected rule (term -> NUMBER) in state 30
